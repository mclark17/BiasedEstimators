fatModS <- fatMod[c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250),]
require(faraway)
summary(fatModR)
fatModR <- fat[-c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250),]
fatModS <- fat[c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250),]
fatR <- fat[-c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250),]
fatS <- fat[c(10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250),]
fatMods <- lm(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fats)
fatModR <- lm(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
fatMods <- lm(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatS)
require(faraway)
summary(fatModR)
sumary(fatModR)
aic <- stepwise(fatModR, crtierion="AIC")
library(Rcmdr)
aic <- stepwise(fatModR, crtierion="AIC")
aic
fatModR2 <- lm(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fatR)
summary(fatModR2)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
require(pls)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
tourneyData = read.csv("03to15Data.csv")
avgData = read.csv("03to16.csv")
x=cbind(avgData,tourneyData[,3:length(tourneyData)])
x=x[,-1]
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
cor(x[,2:15])
avgsZ = x
avgsZ[2:15][is.na(avgsZ[2:15])]=0
cor(avgsZ[,2:15])
#lots of correlation between near consecutive years, makes sense, but useful stuff
just03 = lm(GP03~avgScore03,avgsZ)
summary(just03)
#pretty bad R squared
zforGP03nAVG = x
zforGP03nAVG[2:15][is.na(zforGP03nAVG[2:15])]=0
indextozero=which(names(x)=='GP03') # how to find a particular column index
zforGP03nAVG[indextozero][is.na(zforGP03nAVG[indextozero])]=0
just03mv0 = lm(GP03~avgScore03,zforGP03nAVG) #missing values are replaced with 0
summary(just03mv0) # much worse, probably because there are high scoring teams that dont go to the tournament that year
morestuff1 = lm(GP03~avgScore03+avgFG03,avgsZ)
summary(morestuff1)
morestuff2 = lm(GP03~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff2)
tourneyData = read.csv("03to15Data.csv")
setdwd("C:/Users/Molly/Documents/GitHub/BiasedEstimators/455Project")
setwd("C:/Users/Molly/Documents/GitHub/BiasedEstimators/455Project")
tourneyData = read.csv("03to15Data.csv")
avgData = read.csv("03to16.csv")
x=cbind(avgData,tourneyData[,3:length(tourneyData)])
x=x[,-1]
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
cor(x[,2:15])
avgsZ = x
avgsZ[2:15][is.na(avgsZ[2:15])]=0
cor(avgsZ[,2:15])
#lots of correlation between near consecutive years, makes sense, but useful stuff
just03 = lm(GP03~avgScore03,avgsZ)
summary(just03)
zforGP03nAVG = x
zforGP03nAVG[2:15][is.na(zforGP03nAVG[2:15])]=0
indextozero=which(names(x)=='GP03') # how to find a particular column index
zforGP03nAVG[indextozero][is.na(zforGP03nAVG[indextozero])]=0
just03mv0 = lm(GP03~avgScore03,zforGP03nAVG) #missing values are replaced with 0
summary(just03mv0) # much worse, probably because there are high scoring teams that dont go to the tournament that year
morestuff1 = lm(GP03~avgScore03+avgFG03,avgsZ)
summary(morestuff1)
morestuff2 = lm(GP03~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff2)
just03 = lm(GP03~avgScore03,avgsZ)
summary(just03)
just03mv0 = lm(GP03~avgScore03,zforGP03nAVG) #missing values are replaced with 0
summary(just03mv0)
morestuff1 = lm(GP03~avgScore03+avgFG03,avgsZ)
summary(morestuff1)
morestuff2 = lm(GP03~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff2)
plot(morestuff2$fitted.values, morestuff2$residuals)
?boxcox
boxcox(morestuff2, plotit=TRUE)
morestuff2Adj <- lm(sqrt(GP03)~avgScore03+avgFG03+avgTO03,avgsZ)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
boxcox(morestuff2, plotit=TRUE)
morestuff2Adj <- lm(I((GP03)^(2/3))~avgScore03+avgFG03+avgTO03,avgsZ)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
morestuff2Adj <- lm((GP03)~avgScore03+avgFG03+avgTO03,avgsZ)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
boxcox(morestuff2, plotit=TRUE)
morestuff2Adj <- lm(I((GP03)^(1/3))~avgScore03+avgFG03+avgTO03,avgsZ)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
morestuff2Adj <- lm(I((GP03)^(2/3))~avgScore03+avgFG03+avgTO03,avgsZ)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
qqnorm(morestuff2Adj)
qqnorm(morestuff2Adj$residuals)
abline(0,1)
abline(0,1)
abline(y=x)
qqline(0,1)
qqnorm(morestuff2Adj$residuals)
boxcox(morestuff2Adj, plotit=TRUE)
morestuff2Adj <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
boxcox(morestuff2Adj, plotit=TRUE)
qqnorm(morestuff2Adj$residuals)
lev <- hatvalues(morestuff2Adj)
halfnorm(lev)
studentres <- rstudent(morestuff2Adj)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(morestuff2Adj)
halfnorm(cook)
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ[-c(4,8,17,32,43,177),])
summary(morestuff2Adj2)
summary(morestuff2)
plot(morestuff2Adj2$fitted.values, morestuff2Adj2$residuals)
abline(h=0)
boxcox(morestuff2Adj2, plotit=TRUE)
qqnorm(morestuff2Adj$residuals)
lev <- hatvalues(morestuff2Adj)
halfnorm(lev)
qqnorm(morestuff2Adj2$residuals)
lev <- hatvalues(morestuff2Adj2)
halfnorm(lev)
studentres <- rstudent(morestuff2Adj2)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(morestuff2Adj)
halfnorm(cook)
cook <- cooks.distance(morestuff2Adj2)
halfnorm(cook)
halfnorm(lev)
summary(morestuff2Adj)
plot(morestuff2Adj$fitted.values, morestuff2Adj$residuals)
abline(h=0)
boxcox(morestuff2Adj, plotit=TRUE)
qqnorm(morestuff2Adj$residuals)
lev <- hatvalues(morestuff2Adj)
halfnorm(lev)
studentres <- rstudent(morestuff2Adj)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(morestuff2Adj)
halfnorm(cook)
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ[-c(4,8,17,32,43,177),])
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ[-32,])
summary(morestuff2Adj2)
plot(morestuff2Adj2$fitted.values, morestuff2Adj2$residuals)
abline(h=0)
boxcox(morestuff2Adj2, plotit=TRUE)
qqnorm(morestuff2Adj2$residuals)
lev <- hatvalues(morestuff2Adj2)
halfnorm(lev)
studentres <- rstudent(morestuff2Adj2)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(morestuff2Adj2)
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ[-32,])
summary(morestuff2Adj2)
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ[-c(32),])
summary(morestuff2Adj2)
plot(morestuff2Adj2$fitted.values, morestuff2Adj2$residuals)
abline(h=0)
boxcox(morestuff2Adj2, plotit=TRUE)
qqnorm(morestuff2Adj2$residuals)
lev <- hatvalues(morestuff2Adj2)
halfnorm(lev)
studentres <- rstudent(morestuff2Adj2)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(morestuff2Adj2)
halfnorm(cook)
hi
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,data=avgsZ[-32])
summary(morestuff2Adj2)
plot(morestuff2Adj2$fitted.values, morestuff2Adj2$residuals)
abline(h=0)
boxcox(morestuff2Adj2, plotit=TRUE)
qqnorm(morestuff2Adj2$residuals)
lev <- hatvalues(morestuff2Adj2)
halfnorm(lev)
studentres <- rstudent(morestuff2Adj2)
range(studentres)
which.max(abs(studentres))
adjData <- avgsZ[-32,]
morestuff2Adj2 <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,data=adjData)
summary(morestuff2Adj2)
plot(morestuff2Adj2$fitted.values, morestuff2Adj2$residuals)
library(faraway)
sumary(morestuff2)
sumary(morestuff2Adj)
sumary(morestuff2Adj2)
x
for(i in c(142:154)) x[is.na(x[ ,i]), i] <- 0
x
zforGP03nAVG = x
zforGP03nAVG[2:15][is.na(zforGP03nAVG[2:15])]=0
indextozero=which(names(x)=='GP03') # how to find a particular column index
zforGP03nAVG[indextozero][is.na(zforGP03nAVG[indextozero])]=0
just03mv0 = lm(GP03~avgScore03,zforGP03nAVG) #missing values are replaced with 0
summary(just03mv0) # much worse, probably because there are high scoring teams that dont go to the tournament that year
morestuff1 = lm(GP03~avgScore03+avgFG03,avgsZ)
summary(morestuff1)
morestuff2 = lm(GP03~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff2)
library(faraway)
sumary(morestuff2Adj2)
plot(morestuff2$fitted.values, morestuff2$residuals)
?boxcox
boxcox(morestuff2, plotit=TRUE)
morestuff2Adj <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff2Adj)
sumary(morestuff2Adj)
avgsZ = x
morestuff1 = lm(GP03~avgScore03+avgFG03,avgsZ)
summary(morestuff1)
morestuff2 = lm(GP03~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff2)
library(faraway)
sumary(morestuff2Adj2)
plot(morestuff2$fitted.values, morestuff2$residuals)
?boxcox
boxcox(morestuff2, plotit=TRUE)
plot(morestuff2$fitted.values, morestuff2$residuals)
morestuff2Adj <- lm(I((GP03)^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ)
sumary(morestuff2Adj)
morestuff2Adj <- lm(I((na.omit(GP03))^(-2/3))~avgScore03+avgFG03+avgTO03,avgsZ)
sumary(morestuff2Adj)
plot(prkang[1], prkang[2])
data(kanga)
prkang <- prcomp(na.omit(kanga[3:20]))
summary(prkang)
prkang2 <- prcomp(scale(na.omit(kanga[3:20])))
summary(prkang2)
prkang2
par(mfrow=c(1,1))
robkang <- cov.rob(na.omit(kanga[3:20]))
md <- mahalanobis(na.omit(kanga[3:20]), center=robkang$center, cov=robkang$cov)
n <- nrow(na.omit(kanga[3:20]));p <- ncol(na.omit(kanga[3:20]))
plot(qchisq(1:n/(n+1),p), sort(md))
abline(0,1)
plot(prkang[1], prkang[2])
plot(prkang[1], prkang[2])
prkang2
plot(prkang[c(1,2),])
#Question 11.1
data("seatpos")
require(pls)
pcrmod1 <- pcr(hipcenter ~ HtShoes+Ht+Seated+Arm+Thigh+Leg, data=seatpos)
summary(pcrmod1)
predict(pcrmod1, predictData, ncomp=2, interval="predict")
pcrmod2 <- pcr(hipcenter ~ HtShoes+Ht+Seated+Arm+Thigh+Leg+Age+Weight, data=seatpos)
summary(pcrmod2)
predictData <- data.frame(Age=64.8, Weight=263.7, HtShoes=181.08, Ht=178.56, Seated=91.44, Arm=35.64, Thigh=40.95, Leg=38.79)
predict(pcrmod1, predictData, ncomp=2, interval="predict")
predict(pcrmod2, predictData, ncomp=3, interval="predict")
pcrmod2 <- pcr(hipcenter ~ HtShoes+Ht+Seated+Arm+Thigh+Leg+Age+Weight, data=seatpos)
predict(pcrmod2, predictData, ncomp=3, interval="predict")
predict(plsmod1, predictData, ncomp=3, interval="predict")
set.seed(123)
plsmod1 <- plsr(hipcenter ~ ., data=seatpos, validation="CV")
plsCV <- RMSEP(plsmod1, estimate="CV")
plot(plsCV)
predict(plsmod1, predictData, ncomp=3, interval="predict")
matplot(ridgemod$lambda, coef(ridgemod))
ridgemod <- lm.ridge(hipcenter ~ ., data=seatpos, lambda = seq(0, .5, len=20))
matplot(ridgemod$lambda, coef(ridgemod))
which.min(ridgemod$GCV)
ridgemod <- lm.ridge(hipcenter ~ .+0, data=seatpos, lambda = seq(0, .5, len=20))
matplot(ridgemod$lambda, coef(ridgemod))
which.min(ridgemod$GCV)
predict(ridgemod, predictData, interval="predict")
ridgemod <- lm.ridge(hipcenter ~ .+0, data=seatpos, lambda = seq(0, .05, len=20))
matplot(ridgemod$lambda, coef(ridgemod))
which.min(ridgemod$GCV)
ridgemod <- lm.ridge(hipcenter ~ .+0, data=seatpos, lambda = seq(0, .5, len=20))
matplot(ridgemod$lambda, coef(ridgemod))
which.min(ridgemod$GCV)
predict(ridgemod, predictData, interval="predict")
?seatpos
pred <- cbind(1, as.matrix(seatpos[,-9]))%*%coef(ridgemod)[8,]
pred <- cbind(1, as.matrix(seatpos[,-9]))%*%coef(ridgemod)
pred <- cbind(1, as.matrix(seatpos[,-9]))%*%coef(ridgemod)[8,]
pred <- cbind(1, as.matrix(seatpos[1, ]))%*%coef(ridgemod)[7,]
pred <- cbind(1, as.matrix(seatpos[1, ]))%*%coef(ridgemod)[8,]
sumary(fatModR2)
aic <- stepwise(fatModR, crtierion="AIC")
aic
fatModR2 <- lm(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fatR)
sumary(fatModR2)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
sumary(fatpcrmod)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
fatpcrmod <- pcr(siri ~ age+weight+height+adipos+free+neck+chest+abdom+hip+thigh+knee+ankle+biceps+forearm+wrist, data=fatR)
summary(fatpcrmod)
set.seed(123)
plsmodfat <- plsr(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fat, validation="CV")
plsCV <- RMSEP(plsmodfat, estimate="CV")
plot(plsCV)
set.seed(123)
plsmodfat <- plsr(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fat, validation="CV")
plot(plsCV)
plsmodfat <- plsr(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fat, validation="CV")
plsCV <- RMSEP(plsmodfat, estimate="CV")
plot(plsCV)
ridgemodfat <- lm.ridge(siri ~ weight+adipos+free+chest+abdom+thigh+forearm+0, data=fat, lambda = seq(0, .5, len=20))
matplot(ridgemodfat$lambda, coef(ridgemodfat))
which.min(ridgemodfat$GCV)
ridgemodfat <- lm.ridge(siri ~ weight+adipos+free+chest+abdom+thigh+forearm+0, data=fat, lambda = seq(0, 1, len=20))
matplot(ridgemodfat$lambda, coef(ridgemodfat))
which.min(ridgemodfat$GCV)
ridgemodfat <- lm.ridge(siri ~ weight+adipos+free+chest+abdom+thigh+forearm+0, data=fat, lambda = seq(0, 2.5, len=20))
matplot(ridgemodfat$lambda, coef(ridgemodfat))
which.min(ridgemodfat$GCV)
ridgemodfat <- lm.ridge(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fat, lambda = seq(0, 2.5, len=20))
matplot(ridgemodfat$lambda, coef(ridgemodfat))
which.min(ridgemodfat$GCV)
ridgemodfat <- lm.ridge(siri ~ weight+adipos+free+chest+abdom+thigh+forearm, data=fat, lambda = seq(0, .5, len=20))
matplot(ridgemodfat$lambda, coef(ridgemodfat))
which.min(ridgemodfat$GCV)
prkang2
data("pima")
head(pima)
#part (a)
pima1 <- pima
for (i in 1:768) {
for (j in 1:9) {
if (pima[i,j]==0) pima1[i,j] <- NA
}
}
summary(pima1)
pimaMod <- lm(diastolic ~ pregnant+glucose+triceps+insulin+bmi+diabetes+age+test, data=pima1)
sumary(pimaMod)
#part (c)
(cMeans <- colMeans(pima1, na.rm = TRUE))
pima2 <- pima1
for(i in c(1,2,4:9)) pima2[is.na(pima1[ ,i]), i] <- cMeans[i]
pimaMod2 <- lm(diastolic ~ pregnant+glucose+triceps+insulin+bmi+diabetes+age+test, data=pima2)
sumary(pimaMod2)
#part (d)
pima1[is.na(pima1$pregnant), ]
resPimaP <- predict(pimaMod, pima1[is.na(pima1$pregnant), ])
pima1[is.na(pima1$glucose), ]
resPimaG <- predict(pimaMod, pima1[is.na(pima1$glucose), ])
pima1[is.na(pima1$triceps), ]
resPimaT <- predict(pimaMod, pima1[is.na(pima1$triceps), ])
pima1[is.na(pima1$insulin), ]
resPimaI <- predict(pimaMod, pima1[is.na(pima1$insulin), ])
pima1[is.na(pima1$bmi), ]
resPimaB <- predict(pimaMod, pima1[is.na(pima1$bmi), ])
pima1[is.na(pima1$test), ]
resPimaTe <- predict(pimaMod, pima1[is.na(pima1$test), ])
pima3 <- pima1
summary(pima1)
?gls
#part (b)
glsDivMod <- gls(divorce ~ unemployed+femlab+marriage+birth+military, correlation = corAR1(form=~year), method = "ML", data = na.omit(divusa))
summary(glsDivMod)
glsChedMod <- gls(taste ~ Acetic+H2S+Lactic, correlation = corAR1(form= ~Time) data = na.omit(cheddar))
glsChedMod <- gls(taste ~ Acetic+H2S+Lactic, correlation = corAR1(form= ~time) data = na.omit(cheddar))
summary(glsChedMod)
glsChedMod <- gls(taste ~ Acetic+H2S+Lactic, correlation = corAR1(form= ~time), data = na.omit(cheddar))
glsChedMod <- gls(taste ~ Acetic+H2S+Lactic, correlation = corCAR1, data = na.omit(cheddar))
summary(glsChedMod)
rmse(fitted(fatModR), fatS$siri)
rmse <- function(x,y) sqrt(mean((x-y)^2))
rmse(fitted(fatModR), fatS$siri)
rmse(fitted(fatModR), fatR$siri)
rmse(predict(fatModR, fatS),fatS$siri)
rmse(fitted(fatModR2), fatR$siri)
rmse(predict(fatModR2, fatS),fatS$siri)
rmse(fitted(fatpcrmod), fatR$siri)
rmse(predict(fatpcrmod, fatS),fatS$siri)
rmse(fitted(plsmodfat), fatR$siri)
rmse(predict(plsmodfat, fatS),fatS$siri)
rmse(fitted(ridgemodfat), fatR$siri)
rmse(predict(ridgemodfat, fatS),fatS$siri)
avgData = read.csv("03to16.csv")
tourneyData = read.csv("03to15Data.csv")
for (i in 1:16) {
for (j in 1:364) {
if (is.na(tourneyData[i,j])) (tourneyData[i,j] <- 0)
}
}
for (i in 1:16) {
for (j in 1:364) {
if (is.na(tourneyData[i,j])) (tourneyData[i,j] <- 0)
}
}
tourneyMod <- lm(, data = tourneyData)
tourneyMod <- lm(GPtot ~., data = tourneyData)
sumary(tourneyMod)
library(faraway)
sumary(tourneyMod)
for (i in 1:16) {
for (j in 1:364) {
if (is.na(tourneyData[i,j])) (tourneyData[i,j] <- 0)
}
}
for (i in 1:16) {
for (j in 1:364) {
if (is.na(tourneyData[i,j])==TRUE) (tourneyData[i,j] <- 0)
}
}
for (i in 1:16) {
for (j in 1:364) {
if (tourneyData[i,j])==NA) (tourneyData[i,j] <- 0)
}
}
for (i in 1:16) {
for (j in 1:364) {
if (tourneyData[i,j])=NA) (tourneyData[i,j] <- 0)
}
}
for (i in 1:16) {
for (j in 1:364) {
if (tourneyData[i,j])=NA) {tourneyData[i,j] <- 0}
}
}
for (i in 1:16) {
for (j in 1:364) {
if (is.na(tourneyData[i,j]) == TRUE) {tourneyData[i,j] <- 0}
}
}
head(tourneyData)
for (i in 1:15) {
for (j in 1:363) {
if (is.na(tourneyData[i,j]) == TRUE) {tourneyData[i,j] <- 0}
}
}
setwd("C:/Users/Molly/Documents/GitHub/BiasedEstimators/455Project")
tourneyZData <- read.csv("03to15DataZero.csv")
tourneyZData <- read.csv("03to15DataZeroVal.csv")
head(tourneyZData)
tourneyMod <- lm(GPtot ~., data = tourneyZData)
sumary(tourneyMod)
x=cbind(avgData,tourneyData[,3:length(tourneyData)])
x=x[,-1]
x
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
cor(x[,2:15])
avgsZ = x
avgsZ[2:15][is.na(avgsZ[2:15])]=0
everythingModel <- lm(GPtot ~., data=avgsZ)
everythingMod <- lm(GPtot ~., data=avgsZ)
sumary(everythingMod)
librayr(Rcmdr)
library(Rcmdr)
stepwise(everythingMod, criterion = "AIC")
stepwise(everythingMod, criterion = "BIC")
pcr(everythingMod, criterion = "BIC")
pcr(everythingMod, criterion = "BIC")
library(Rcmdr)
library(alr3)
library(Amelia)
library(nlme)
pcr(everythingMod, criterion = "BIC")
library(alr3)
library(Amelia)
library(nlme)
pcrMod <- pcr(GPtot ~., data=avgsZ)
require(pls)
pcrMod <- pcr(GPtot ~., data=avgsZ)
summary(pcrMod)
newMod <- (pcrMod, ncomp=3)
head(avgsZ)
everythingMod <- lm(GPtot ~., data=avgsZ[,-c(141:154)])
sumary(everythingMod)
stepwise(everythingMod, criterion = AIC)
stepwise(everythingMod, criterion = "AIC")
stepwise(everythingMod)
everythingMod
everythingMod <- lm(GP05 ~., data=avgsZ[,c(17, 31, 45, 59, 73, 87, 101, 115, 129, 143)])
View(avgsZ)
everythingMod <- lm(GP05 ~., data=avgsZ[,c(18, 32, 46, 60, 74, 88, 102, 116, 130, 144)])
sumary(everythingMod)
plot(fitted(everythingMod), everythingMod$residuals)
abline(h=0)
boxcox(everythingMod, plotit=TRUE)
library(faraway)
boxcox(everythingMod, plotit=TRUE)
require(faraway)
boxcox(everythingMod, plotit=TRUE)
?boxcox
require(MASS)
boxcox(everythingMod, plotit=TRUE)
everythingModAdj <- lm(I((GP05)^(-2)) ~., data=avgsZ[,c(18, 32, 46, 60, 74, 88, 102, 116, 130, 144)])
plot(fitted(everythingModAdj), everythingModAdj$residuals)
abline(h=0)
boxcox(everythingModAdj, plotit = TRUE)
everythingModAdj <- lm(I((GP05)^(-2/3)) ~., data=avgsZ[,c(18, 32, 46, 60, 74, 88, 102, 116, 130, 144)])
plot(fitted(everythingModAdj), everythingModAdj$residuals)
abline(h=0)
boxcox(everythingModAdj, plotit = TRUE)
sumary(everythingModAdj)
plot(everythingModAdj)
plot(everythingModAdj)
