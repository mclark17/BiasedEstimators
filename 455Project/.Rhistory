x=x[,-1]
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
cor(x[,2:15])
avgsZ = x
avgsZ[2:141][is.na(avgsZ[2:141])]=0
cor(avgsZ[,2:15])
addPriorYear <- function(yearoffset,avgsZ1,bool=TRUE) {
#1 means 2013, 2 means 2014, 3 means 2015, and so on
gp = "GP"
prefix<-c("avgScore","avgFG","avgTP","avgFT","avgRB","avgASS","avgTO","avgSTL","avgBL","avgPF","GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
ogYear = postfix[yearoffset]
prevYear = postfix[yearoffset-1]
avgsZ2 = avgsZ1
avgsZ2[,1]=1101:1464
odf = data.frame(matrix(ncol=(1+ 10 + 1 +1),nrow=(1464-1100)))# 10 for the stats, 2 for the matching years GP and prev year GP
colnames(odf)[1]="Team"
colnames(odf)[2:12] = paste(prefix,postfix[yearoffset],sep="")
colnames(odf)[13]=paste(gp,postfix[yearoffset-1],sep="")
odf[,1]=1101:1464
counter = 1
#print(avgsZ2) this is fine
for(i in 2:12)
{
odf[,i]=avgsZ2[,14*(counter-1)+1+yearoffset]
counter = counter+1
}
if(bool == FALSE)
{
odf['Team'] = teamInfo[ match(odf[['Team']],teamInfo[['Team_Id']]),'Team_Name']
return(odf[,-length(odf)])
}
ogGP = paste("GP",ogYear,sep="")
prevGP = paste("GP",prevYear,sep="")
odf[,prevGP]=0
odf=na.omit(odf)
for(i in 1:length(odf$Team))
{
teamname = (odf[i,]$Team)
if(is.na(avgsZ2[avgsZ2$Team==teamname,prevGP]))
{
}
else
{
odf[i,prevGP] = avgsZ2[avgsZ2$Team==teamname,prevGP]
}
}
odf[is.na(odf)] = 0
odf['Team'] = teamInfo[ match(odf[['Team']],teamInfo[['Team_Id']]),'Team_Name']
return(odf)
}
library(faraway)
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
bigtime2 = list()
bigtime = list()
gp = "GP"
for(i in 1:13){
yr = paste(gp,postfix[i],sep="")
bigtime2[[i]]=na.omit(addPriorYear(i,avgsZ,FALSE))[,-1]
bigtime2[[i]]<-bigtime2[[i]][complete.cases(bigtime2[[i]]),]
write.csv(bigtime2[[i]],paste(yr,'.csv',sep=""))
}
gp = "GP"
for(i in 1:13){
yr = paste(gp,postfix[i],sep="")
dat=read.csv(paste(yr,'.csv',sep=""))
bigtime[[i]]=lm(yr~.,dat[,-1])
}
avgData03 = read.csv("GP03.csv")
summary(lm(GP03~.,avgData03[,-1]))
avgData04 = read.csv("GP04.csv")
summary(lm(GP04~.,avgData04[,-1]))
avgData5 = read.csv("GP05.csv")
summary(lm(GP05~.,avgData5[,-1]))
avgData6 = read.csv("GP06.csv")
summary(lm(GP06~.,avgData6[,-1]))
avgData7 = read.csv("GP07.csv")
summary(lm(GP07~.,avgData7[,-1]))
avgData8 = read.csv("GP08.csv")
summary(lm(GP08~.,avgData8[,-1]))
avgData9 = read.csv("GP09.csv")
summary(lm(GP09~.,avgData9[,-1]))
avgData10 = read.csv("GP10.csv")
summary(lm(GP10~.,avgData10[,-1]))
avgData11 = read.csv("GP11.csv")
summary(lm(GP11~.,avgData11[,-1]))
avgData12 = read.csv("GP12.csv")
summary(lm(GP12~.,avgData12[,-1]))
avgData13 = read.csv("GP13.csv")
summary(lm(GP13~.,avgData13[,-1]))
avgData14 = read.csv("GP14.csv")
summary(lm(GP14~.,avgData14[,-1]))
avgData15 = read.csv("GP15.csv")
summary(lm(GP15~.,avgData15[,-1]))
#testing
temp1 = addPriorYear(10,avgsZ,TRUE)
temp2 = lm(GP12~.,temp1[,-1])
summary(temp2)
summary(bigtime[[10]])
temp3 = addPriorYear(13,avgsZ,TRUE) # represents 2015
temp4 = lm(GP15~.,temp3[,-1])
summary(temp4)
summary(bigtime[[13]])
#08 and 09 were very strong years
prev10 = addPriorYear(8,avgsZ,TRUE)
fit10 = lm(GP10~.,prev10[,-1])
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
prev8 = addPriorYear(6,avgsZ,TRUE)
fit08 = lm(GP08~.,prev8[,-1])
prev7 = addPriorYear(5,avgsZ,TRUE)
fit07 = lm(GP07~.,prev7[,-1])
require(MASS)
stepwise(fit08,criterion = c("AIC"),direction=c("forward"))
avgData8 = read.csv("GP08.csv")
summary(lm(GP08~.,avgData8[,-1]))
avgData9 = read.csv("GP09.csv")
summary(lm(GP09~.,avgData9[,-1]))
prev8 = addPriorYear(6,avgsZ,TRUE)
fit08 = lm(GP08~.,prev8[,-1])
summary(fit08)
summary(fit07)
summary(fit09)
summary(fit10)
plot(fitted(fit08), residuals(fit08))
boxcox(fit08)
boxcox(fit08, plotit = TRUE)
fit08Adj <- lm(I(GP08^(-1/2))~.,prev8[,-1])
summary(fit08Adj)
plot(fitted(fit09), residuals(fit09))
boxcox(fit09, plotit = TRUE)
fit08Adj <- lm(I(GP08^(-1/2))~.,prev8[,-1])
summary(fit08Adj)
boxcox(fit09, plotit = TRUE)
fit08Adj <- lm(I(GP09^(-1/2))~.,prev9[,-1])
summary(fit09Adj)
fit09Adj <- lm(I(GP09^(-1/2))~.,prev9[,-1])
summary(fit09Adj)
boxcox(fit09Adj, plotit=TRUE)
qqnorm(fit09Adj)
qqnorm(fit09Adj$residuals)
lev <- hatvalues(fit09Adj)
halfnorm(lev)
studentres <- rstudent(fit09Adj)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(fit09Adj)
halfnorm(cook)
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
summary(fit09)
require(MASS)
stepwise(fit08,criterion = c("AIC"),direction=c("forward"))
plot(fitted(fit09), residuals(fit09))
boxcox(fit09, plotit = TRUE)
fit09Adj <- lm(I(GP09^(-1/2))~.,prev9[,-1])
summary(fit09Adj)
plot(fitted(fit09Adj), residuals(fit09Adj))
qqnorm(fit09Adj$residuals)
lev <- hatvalues(fit09Adj)
halfnorm(lev)
studentres <- rstudent(fit09Adj)
range(studentres)
which.max(abs(studentres))
cook <- cooks.distance(fit09Adj)
halfnorm(cook)
library(Rcmdr)
stepwise(fit09Adj)
stepwise(fit09Adj,criterion = c("AIC"),direction=c("forward"))
fit09Adj2 = lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgSTL09+avgScore09,prev9[,-1])
summary(fit09Adj2)
plot(fitted(fit09Adj), residuals(fit09Adj))
plot(fitted(fit09), residuals(fit09))
boxcox(fit09Adj, plotit=TRUE)
boxcox(fit09, plotit = TRUE)
qqnorm(fit09Adj$residuals)
lev <- hatvalues(fit09Adj)
halfnorm(lev)
stepwise(fit09Adj,criterion = c("AIC"),direction=c("backward"))
fit09Adj3 <- lm(I(GP09^(-1/2)) ~ avgScore09+avgFG09+avgTP09+avgASS09+avgTO09+avgSTL09+avgPF09+GP08, data = prev9[,-1])
summary(fit09Adj3)
summary(fit09Adj2)
library(faraway)
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
summary(fit09)
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
sumary(fit09)
fit09Adj <- lm(I(GP09^(-1/2))~.,prev9[,-1])
sumary(fit09Adj)
stepwise(fit09Adj,criterion = c("AIC"),direction=c("forward"))
fit09Adj2 = lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgSTL09+avgScore09,prev9[,-1])
sumary(fit09Adj2)
stepwise(fit09Adj,criterion = c("AIC"),direction=c("backward"))
fit09Adj3 <- lm(I(GP09^(-1/2)) ~ avgScore09 + avgFG09 + avgTP09 + avgASS09 + avgTO09 + avgSTL09 + avgPF09 + GP08, data = prev9[,-1])
sumary(fit09Adj3)
predMod16 <- lm(GP16~GP15+avgASS16+avgFT16+avgPF16+avgSTL16+avgScore16,prev15[,-1])
predMod16 <- lm(GP16~GP15+avgASS16+avgFT16+avgPF16+avgSTL16+avgScore16,prev16[,-1])
predMod15 <- lm(GP15~GP14+avgASS15+avgFT15+avgPF15+avgSTL15+avgScore15,prev15[,-1])
prev15 = addPriorYear(13,avgsZ,TRUE)
predMod15 <- lm(GP15~GP14+avgASS15+avgFT15+avgPF15+avgSTL15+avgScore15,prev15[,-1])
sumary(predMod15)
predMod15full <- lm(GP15~., prev15[,-1])
sumary(predMod15full)
summary(predMod15)
summary(predMod15full)
stepwise(predMod15full, criterion = "AIC", direction = c("forward"))
plot(predMod15full$fitted.values, predMod15full$residuals)
boxcox(predMod15full, plotit=TRUE)
predMod15fullAdj <- lm(I(GP15^(-1/2))~., prev15[,-1])
summary(predMod15fullAdj)
stepwise(predMod15fullAdj, criterion = "AIC", direction = c("forward"))
fit09Adj4 <- lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgSTL09+avgScore09+avgFG09,prev9[,-1])
sumary(fit09Adj4)
summary(fit09Adj4)
summary(fit09Adj2)
fit09Adj4 <- lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgSTL09+avgScore09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
fit09Adj4 <- lm(GP09~GP08+avgASS09+avgPF09+avgSTL09+avgScore09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
fit09Adj4 <- lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgScore09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
fit09Adj4 <- lm(GP09~GP08+avgFT09+avgPF09+avgScore09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
summary(fit09Adj4)
fit09Adj4 <- lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgScore09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
fit09Adj4 <- lm(GP09~GP08+avgASS09+avgFT09+avgPF09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
predset <- data.frame(GP14=1, avgASS15=12.45161, avgFT15=18.51613, avgPF15=17.58065, avgSTL15=6.483871, avgScore15=74.61290)
predict(predMod15Adj, predset, interval="predict")
predict(predMod15, predset, interval="predict")
predict(fit09Adj4, predset, interval="predict")
predset <- data.frame(GP08=1, avgASS08=12.45161, avgFT08=18.51613, avgPF08=17.58065, avgSTL08=6.483871, avgScore08=74.61290)
predict(fit09Adj4, predset, interval="predict")
predset <- data.frame(GP08=1, avgASS09=12.45161, avgFT09=18.51613, avgPF09=17.58065, avgSTL09=6.483871, avgScore09=74.61290)
predict(fit09Adj4, predset, interval="predict")
predict(fit09Adj, predset, interval="predict")
predict(fit09Adj2, predset, interval="predict")
predset <- data.frame(GP08=6, avgASS09=13.48485, avgFT09=17.33333, avgPF09=16.63636, avgSTL09=6.393939, avgScore09=81.45455)
predict(fit09Adj2, predset, interval="predict")
predset15 <- data.frame(GP014=6, avgASS15=13.48485, avgFT15=17.33333, avgPF15=16.63636, avgSTL15=6.393939, avgScore15=81.45455)
predict(fit09Adj2, predset15, interval="predict")
predset15 <- data.frame(GP014=6, avgASS15=13.48485, avgFT15=17.33333, avgPF15=16.63636, avgSTL15=6.393939, avgScore15=81.45455)
predict(predMod15, predset15, interval="predict")
predset15 <- data.frame(GP14=6, avgASS15=13.48485, avgFT15=17.33333, avgPF15=16.63636, avgSTL15=6.393939, avgScore15=81.45455)
predict(predMod15, predset15, interval="predict")
summary(predMod15full)
plot(fitted(fit09), residuals(fit09))
boxcox(fit09, plotit = TRUE)
abline(h=0)
fit09Adj4 <- lm(I(GP09^(-1/2))~GP08+avgASS09+avgFT09+avgPF09+avgFG09+avgTO09,prev9[,-1])
summary(fit09Adj4)
predset09 <- data.frame(GP08=6, avgASS09=13.48485, avgFT09=17.33333, avgPF09=16.63636, avgSTL09=6.393939, avgScore09=81.45455)
predict(fit09Adj2, predset09, interval="predict")
tourneyData = read.csv("03to15Data.csv")
avgData = read.csv("03to16.csv")
teamInfo = read.csv("Teams.csv")
x=cbind(avgData,tourneyData[,3:length(tourneyData)])
x=x[,-1]
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
cor(x[,2:15])
avgsZ = x
avgsZ[2:141][is.na(avgsZ[2:141])]=0
cor(avgsZ[,2:15])
addPriorYear <- function(yearoffset,avgsZ1,bool=TRUE) {
#1 means 2013, 2 means 2014, 3 means 2015, and so on
gp = "GP"
prefix<-c("avgScore","avgFG","avgTP","avgFT","avgRB","avgASS","avgTO","avgSTL","avgBL","avgPF","GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
ogYear = postfix[yearoffset]
prevYear = postfix[yearoffset-1]
avgsZ2 = avgsZ1
avgsZ2[,1]=1101:1464
odf = data.frame(matrix(ncol=(1+ 10 + 1 +1),nrow=(1464-1100)))# 10 for the stats, 2 for the matching years GP and prev year GP
colnames(odf)[1]="Team"
colnames(odf)[2:12] = paste(prefix,postfix[yearoffset],sep="")
colnames(odf)[13]=paste(gp,postfix[yearoffset-1],sep="")
odf[,1]=1101:1464
counter = 1
#print(avgsZ2) this is fine
for(i in 2:12)
{
odf[,i]=avgsZ2[,14*(counter-1)+1+yearoffset]
counter = counter+1
}
if(bool == FALSE)
{
odf['Team'] = teamInfo[ match(odf[['Team']],teamInfo[['Team_Id']]),'Team_Name']
return(odf[,-length(odf)])
}
ogGP = paste("GP",ogYear,sep="")
prevGP = paste("GP",prevYear,sep="")
odf[,prevGP]=0
odf=na.omit(odf)
for(i in 1:length(odf$Team))
{
teamname = (odf[i,]$Team)
if(is.na(avgsZ2[avgsZ2$Team==teamname,prevGP]))
{
}
else
{
odf[i,prevGP] = avgsZ2[avgsZ2$Team==teamname,prevGP]
}
}
odf[is.na(odf)] = 0
odf['Team'] = teamInfo[ match(odf[['Team']],teamInfo[['Team_Id']]),'Team_Name']
return(odf)
}
library(faraway)
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
bigtime2 = list()
bigtime = list()
gp = "GP"
for(i in 1:13){
yr = paste(gp,postfix[i],sep="")
bigtime2[[i]]=na.omit(addPriorYear(i,avgsZ,FALSE))[,-1]
bigtime2[[i]]<-bigtime2[[i]][complete.cases(bigtime2[[i]]),]
write.csv(bigtime2[[i]],paste(yr,'.csv',sep=""))
}
gp = "GP"
for(i in 1:13){
yr = paste(gp,postfix[i],sep="")
dat=read.csv(paste(yr,'.csv',sep=""))
bigtime[[i]]=lm(yr~.,dat[,-1])
}
avgData03 = read.csv("GP03.csv")
summary(lm(GP03~.,avgData03[,-1]))
avgData04 = read.csv("GP04.csv")
summary(lm(GP04~.,avgData04[,-1]))
avgData5 = read.csv("GP05.csv")
summary(lm(GP05~.,avgData5[,-1]))
avgData6 = read.csv("GP06.csv")
summary(lm(GP06~.,avgData6[,-1]))
avgData7 = read.csv("GP07.csv")
summary(lm(GP07~.,avgData7[,-1]))
avgData8 = read.csv("GP08.csv")
summary(lm(GP08~.,avgData8[,-1]))
avgData9 = read.csv("GP09.csv")
summary(lm(GP09~.,avgData9[,-1]))
avgData10 = read.csv("GP10.csv")
summary(lm(GP10~.,avgData10[,-1]))
avgData11 = read.csv("GP11.csv")
summary(lm(GP11~.,avgData11[,-1]))
avgData12 = read.csv("GP12.csv")
summary(lm(GP12~.,avgData12[,-1]))
avgData13 = read.csv("GP13.csv")
summary(lm(GP13~.,avgData13[,-1]))
avgData14 = read.csv("GP14.csv")
summary(lm(GP14~.,avgData14[,-1]))
avgData15 = read.csv("GP15.csv")
summary(lm(GP15~.,avgData15[,-1]))
tourneyData = read.csv("03to15Data.csv")
avgData = read.csv("03to16.csv")
teamInfo = read.csv("Teams.csv")
x=cbind(avgData,tourneyData[,3:length(tourneyData)])
x=x[,-1]
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
cor(x[,2:15])
avgsZ = x
avgsZ[2:141][is.na(avgsZ[2:141])]=0
cor(avgsZ[,2:15])
addPriorYear <- function(yearoffset,avgsZ1,bool=TRUE) {
#1 means 2013, 2 means 2014, 3 means 2015, and so on
gp = "GP"
prefix<-c("avgScore","avgFG","avgTP","avgFT","avgRB","avgASS","avgTO","avgSTL","avgBL","avgPF","GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
ogYear = postfix[yearoffset]
prevYear = postfix[yearoffset-1]
avgsZ2 = avgsZ1
avgsZ2[,1]=1101:1464
odf = data.frame(matrix(ncol=(1+ 10 + 1 +1),nrow=(1464-1100)))# 10 for the stats, 2 for the matching years GP and prev year GP
colnames(odf)[1]="Team"
colnames(odf)[2:12] = paste(prefix,postfix[yearoffset],sep="")
colnames(odf)[13]=paste(gp,postfix[yearoffset-1],sep="")
odf[,1]=1101:1464
counter = 1
#print(avgsZ2) this is fine
for(i in 2:12)
{
odf[,i]=avgsZ2[,14*(counter-1)+1+yearoffset]
counter = counter+1
}
if(bool == FALSE)
{
odf['Team'] = teamInfo[ match(odf[['Team']],teamInfo[['Team_Id']]),'Team_Name']
return(odf[,-length(odf)])
}
ogGP = paste("GP",ogYear,sep="")
prevGP = paste("GP",prevYear,sep="")
odf[,prevGP]=0
odf=na.omit(odf)
for(i in 1:length(odf$Team))
{
teamname = (odf[i,]$Team)
if(is.na(avgsZ2[avgsZ2$Team==teamname,prevGP]))
{
}
else
{
odf[i,prevGP] = avgsZ2[avgsZ2$Team==teamname,prevGP]
}
}
odf[is.na(odf)] = 0
odf['Team'] = teamInfo[ match(odf[['Team']],teamInfo[['Team_Id']]),'Team_Name']
return(odf)
}
library(faraway)
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
bigtime2 = list()
bigtime = list()
gp = "GP"
for(i in 1:13){
yr = paste(gp,postfix[i],sep="")
bigtime2[[i]]=na.omit(addPriorYear(i,avgsZ,FALSE))[,-1]
bigtime2[[i]]<-bigtime2[[i]][complete.cases(bigtime2[[i]]),]
write.csv(bigtime2[[i]],paste(yr,'.csv',sep=""))
}
gp = "GP"
for(i in 1:13){
yr = paste(gp,postfix[i],sep="")
dat=read.csv(paste(yr,'.csv',sep=""))
bigtime[[i]]=lm(yr~.,dat[,-1])
}
avgData03 = read.csv("GP03.csv")
summary(lm(GP03~.,avgData03[,-1]))
avgData04 = read.csv("GP04.csv")
summary(lm(GP04~.,avgData04[,-1]))
avgData5 = read.csv("GP05.csv")
summary(lm(GP05~.,avgData5[,-1]))
avgData6 = read.csv("GP06.csv")
summary(lm(GP06~.,avgData6[,-1]))
avgData7 = read.csv("GP07.csv")
summary(lm(GP07~.,avgData7[,-1]))
avgData8 = read.csv("GP08.csv")
summary(lm(GP08~.,avgData8[,-1]))
avgData9 = read.csv("GP09.csv")
summary(lm(GP09~.,avgData9[,-1]))
avgData10 = read.csv("GP10.csv")
summary(lm(GP10~.,avgData10[,-1]))
avgData11 = read.csv("GP11.csv")
summary(lm(GP11~.,avgData11[,-1]))
avgData12 = read.csv("GP12.csv")
summary(lm(GP12~.,avgData12[,-1]))
avgData13 = read.csv("GP13.csv")
summary(lm(GP13~.,avgData13[,-1]))
avgData14 = read.csv("GP14.csv")
summary(lm(GP14~.,avgData14[,-1]))
avgData15 = read.csv("GP15.csv")
summary(lm(GP15~.,avgData15[,-1]))
fit09 = lm(GP09~.,prev9[,-1])
summary(fit09)
prev15 = addPriorYear(13,avgsZ,TRUE)
fit15 = lm(GP15~.,prev15[,-1])
summary(fit15)
prev14 = addPriorYear(12,avgsZ,TRUE)
fit14 = lm(GP14~.,prev14[,-1])
summary(fit14)
prev13 = addPriorYear(11,avgsZ,TRUE)
fit13 = lm(GP13~.,prev13[,-1])
summary(fit13)
prev12 = addPriorYear(10,avgsZ,TRUE)
fit12 = lm(GP12~.,prev12[,-1])
summary(fit12)
prev11 = addPriorYear(9,avgsZ,TRUE)
fit11 = lm(GP11~.,prev11[,-1])
summary(fit11)
prev10 = addPriorYear(8,avgsZ,TRUE)
fit10 = lm(GP10~.,prev10[,-1])
summary(fit10)
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
summary(fit09)
prev8 = addPriorYear(6,avgsZ,TRUE)
fit08 = lm(GP08~.,prev8[,-1])
summary(fit08)
prev7 = addPriorYear(5,avgsZ,TRUE)
fit07 = lm(GP07~.,prev7[,-1])
summary(fit07)
prev6 = addPriorYear(4,avgsZ,TRUE)
fit06 = lm(GP06~.,prev6[,-1])
summary(fit06)
prev5 = addPriorYear(3,avgsZ,TRUE)
fit05 = lm(GP05~.,prev5[,-1])
summary(fit05)
prev4 = addPriorYear(2,avgsZ,TRUE)
fit04 = lm(GP04~.,prev4[,-1])
summary(fit04)
prev3 = addPriorYear(1,avgsZ,TRUE)
fit03 = lm(GP03~.,prev3[,-1])
summary(fit03)
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
sumary(fit09)
prev9 = addPriorYear(7,avgsZ,TRUE)
fit09 = lm(GP09~.,prev9[,-1])
summary(fit09)
require(MASS)
library(faraway)
plot(fitted(fit09), residuals(fit09))
abline(h=0)
boxcox(fit09, plotit = TRUE)
fit09Adj <- lm(I(GP09^(-1/2))~.,prev9[,-1])
sumary(fit09Adj)
summary(fit09Adj)
fit09Adj <- lm(I(GP09^(-1/2))~.,prev9[,-1])
plot(fitted(fit09Adj), residuals(fit09Adj))
summary(fit09Adj)
abline(h=0)
qqnorm(fit09Adj$residuals)
