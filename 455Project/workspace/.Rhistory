print(holdStuff)
return(holdStuff)
}
results = getYears(twn,years,newSeeds)
getYears = function(allData,years,season)
{
holdStuff = data.frame(matrix(ncol = 3, nrow = 64*(2015-1984)-1))
colnames(holdStuff)=c("Season","Team","GP")
tot = list()
for(index in 1:length(years))
{
yData = allData[allData$Season == years[index],]
teams = unique(yData$Team)
for( index2 in 1:32)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 1
}
for( index2 in 33:48)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 2
}
for( index2 in 49:56)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 3
}
for( index2 in 57:60)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 4
}
for( index2 in 61:62)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 5
}
correctPos = (index-1)*64 + 63
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[63,]$Lteam))
holdStuff[correctPos,]$GP = 6
holdStuff[correctPos+1,]$Season = years[index]
holdStuff[correctPos+1,]$Team = levels(factor(yData[63,]$Wteam))
holdStuff[correctPos+1,]$GP = 6
}
print(holdStuff)
return(holdStuff)
}
results = getYears(twn,years,newSeeds)
getYears = function(allData,years,season)
{
holdStuff = data.frame(matrix(ncol = 3, nrow = 64*(2015-1984)-1))
colnames(holdStuff)=c("Season","Team","GP")
tot = list()
for(index in 1:length(years))
{
yData = allData[allData$Season == years[index],]
teams = unique(yData$Team)
for( index2 in 1:32)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 1
}
for( index2 in 33:48)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 2
}
for( index2 in 49:56)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 3
}
for( index2 in 57:60)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 4
}
for( index2 in 61:62)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 5
}
correctPos = (index-1)*64 + 63
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[63,]$Lteam))
holdStuff[correctPos,]$GP = 6
holdStuff[correctPos+1,]$Season = years[index]
holdStuff[correctPos+1,]$Team = levels(factor(yData[63,]$Wteam))
holdStuff[correctPos+1,]$GP = 6
}
print(holdStuff)
return(holdStuff)
}
results = getYears(twn,years,newSeeds)
getYears = function(allData,years,season)
{
holdStuff = data.frame(matrix(ncol = 3, nrow = 64*(2015-1985)))
colnames(holdStuff)=c("Season","Team","GP")
tot = list()
for(index in 1:length(years))
{
yData = allData[allData$Season == years[index],]
teams = unique(yData$Team)
for( index2 in 1:32)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 1
}
for( index2 in 33:48)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 2
}
for( index2 in 49:56)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 3
}
for( index2 in 57:60)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 4
}
for( index2 in 61:62)
{
correctPos = (index-1)*64 + index2
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[index2,]$Lteam))
holdStuff[correctPos,]$GP = 5
}
correctPos = (index-1)*64 + 63
holdStuff[correctPos,]$Season = years[index]
holdStuff[correctPos,]$Team = levels(factor(yData[63,]$Lteam))
holdStuff[correctPos,]$GP = 6
holdStuff[correctPos+1,]$Season = years[index]
holdStuff[correctPos+1,]$Team = levels(factor(yData[63,]$Wteam))
holdStuff[correctPos+1,]$GP = 6
}
print(holdStuff)
return(holdStuff)
}
results = getYears(twn,years,newSeeds)
prefix<-c("GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","16")
i<-1
j<-1
k<-length(prefix)*length(postfix)
k<-as.numeric(k)
colNames<-character(k)
for(i in 1:length(prefix)){
for(j in 1:length(postfix)){
colNames[(i-1)*14+j]<-paste(prefix[i],postfix[j],sep="")
}
}
colNames
colNames<-append(colNames,"Team",0)
avgScore = data.frame(matrix(ncol=(14+1),nrow=(1464-1100)))
colnames(avgScore)<-colNames
results = data.frame(matrix(ncol=(14+1),nrow=(1464-1100)))
colnames(results)<-colNames
results
results[,1] = 1101:1464
results
years
yData
yData2
ydata3=read.csv("TourneyCompactResults.csv")
ydata3
prefix<-c("GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15")
i<-1
j<-1
k<-length(prefix)*length(postfix)
k<-as.numeric(k)
colNames<-character(k)
for(i in 1:length(prefix)){
for(j in 1:length(postfix)){
colNames[(i-1)*14+j]<-paste(prefix[i],postfix[j],sep="")
}
}
print(colNames)
colNames<-append(colNames,"Team",0)
results = data.frame(matrix(ncol=(14+1),nrow=(1464-1100)))
results = data.frame(matrix(ncol=(13+1),nrow=(1464-1100)))
colnames(results)<-colNames
results
print(colNames)
colNames<-append(colNames,"Team",0)
colNames
colNames<-character(k)
for(i in 1:length(prefix)){
for(j in 1:length(postfix)){
colNames[(i-1)*14+j]<-paste(prefix[i],postfix[j],sep="")
}
}
print(colNames)
colNames<-append(colNames,"Team",0)
results = data.frame(matrix(ncol=(13+1),nrow=(1464-1100)))
colnames(results)<-colNames
results
results[,1] = 1101:1464
years[1]
ydata3
prefix<-c("GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","tot") #no results for 2016
j<-1
i<-1
k<-as.numeric(k)
k<-length(prefix)*length(postfix)
colNames<-character(k)
print(colNames)
for(i in 1:length(prefix)){
for(j in 1:length(postfix)){
colNames[(i-1)*14+j]<-paste(prefix[i],postfix[j],sep="")
}
}
colNames<-append(colNames,"Team",0)
results = data.frame(matrix(ncol=(14+1),nrow=(1464-1100)))
colnames(results)<-colNames
results[,1] = 1101:1464
results
for (y in 1:length(years)){
yData = ydata3[ydata3$Season == years[y],]
for(x in 1:length(yData$Season)){
aindexw = which(results$Team==yData[x, 3])
aindexl = which(results$Team==yData[x, 5])
if(is.na(results[aindexw,y+1]))
{
results[aindexw,y+1] = 1
}
else
{
results[aindexw,y+1] = results[aindexw,y+1] +1
}
if(is.na(results[aindexl,y+1]))
{
results[aindexl,y+1] = 1
}
else
{
results[aindexl,y+1] = results[aindexl,y+1] +1
}
if(is.na(results[aindexw,length(results)]))
{
results[aindexw,length(results)] = 1
}
else
{
results[aindexw,length(results)] = results[aindexw,length(results)] + 1
}
if(is.na(results[aindexl,length(results)]))
{
results[aindexl,length(results)] = 1
}
else
{
results[aindexl,length(results)] = results[aindexl,length(results)] + 1
}
}
}
aindexw
results$Team
yData
y
years[14]
#-1 because there is no 2016
for (y in 1:(length(years)-1)){
yData = ydata3[ydata3$Season == years[y],]
for(x in 1:length(yData$Season)){
aindexw = which(results$Team==yData[x, 3])
aindexl = which(results$Team==yData[x, 5])
if(is.na(results[aindexw,y+1]))
{
results[aindexw,y+1] = 1
}
else
{
results[aindexw,y+1] = results[aindexw,y+1] +1
}
if(is.na(results[aindexl,y+1]))
{
results[aindexl,y+1] = 1
}
else
{
results[aindexl,y+1] = results[aindexl,y+1] +1
}
if(is.na(results[aindexw,length(results)]))
{
results[aindexw,length(results)] = 1
}
else
{
results[aindexw,length(results)] = results[aindexw,length(results)] + 1
}
if(is.na(results[aindexl,length(results)]))
{
results[aindexl,length(results)] = 1
}
else
{
results[aindexl,length(results)] = results[aindexl,length(results)] + 1
}
}
}
results
#-1 because there is no 2016
for (y in 1:(length(years)-1)){
yData = ydata3[ydata3$Season == years[y],]
for(x in 1:length(yData$Season)){
aindexw = which(results$Team==yData[x, 3])
aindexl = which(results$Team==yData[x, 5])
if(is.na(results[aindexw,y+1]))
{
results[aindexw,y+1] = 1
}
else
{
results[aindexw,y+1] = results[aindexw,y+1] +1
}
if(is.na(results[aindexl,y+1]))
{
results[aindexl,y+1] = 1
}
else
{
results[aindexl,y+1] = results[aindexl,y+1] +1
}
if(is.na(results[aindexw,length(results)]))
{
results[aindexw,length(results)] = 1
}
else
{
results[aindexw,length(results)] = results[aindexw,length(results)] + 1
}
if(is.na(results[aindexl,length(results)]))
{
results[aindexl,length(results)] = 1
}
else
{
results[aindexl,length(results)] = results[aindexl,length(results)] + 1
}
}
}
results
prefix<-c("GP")
postfix<-c("03","04","05","06","07","08","09","10","11","12","13","14","15","tot") #no results for 2016
i<-1
j<-1
k<-as.numeric(k)
k<-length(prefix)*length(postfix)
colNames<-character(k)
for(i in 1:length(prefix)){
for(j in 1:length(postfix)){
colNames[(i-1)*14+j]<-paste(prefix[i],postfix[j],sep="")
}
}
colNames<-append(colNames,"Team",0)
print(colNames)
results = data.frame(matrix(ncol=(14+1),nrow=(1464-1100)))
results[,1] = 1101:1464
colnames(results)<-colNames
#-1 because there is no 2016
for (y in 1:(length(years)-1)){
yData = ydata3[ydata3$Season == years[y],]
for(x in 1:length(yData$Season)){
aindexw = which(results$Team==yData[x, 3])
aindexl = which(results$Team==yData[x, 5])
if(is.na(results[aindexw,y+1]))
{
results[aindexw,y+1] = 1
}
else
{
results[aindexw,y+1] = results[aindexw,y+1] +1
}
if(is.na(results[aindexl,y+1]))
{
results[aindexl,y+1] = 1
}
else
{
results[aindexl,y+1] = results[aindexl,y+1] +1
}
if(is.na(results[aindexw,length(results)]))
{
results[aindexw,length(results)] = 1
}
else
{
results[aindexw,length(results)] = results[aindexw,length(results)] + 1
}
if(is.na(results[aindexl,length(results)]))
{
results[aindexl,length(results)] = 1
}
else
{
results[aindexl,length(results)] = results[aindexl,length(results)] + 1
}
}
}
getYears2 = function(allData,years,season)
{
holdStuff = data.frame(matrix(ncol = 3, nrow = 64*(2015-1984)))
colnames(holdStuff)=c("Season","Team","GP")
for(x in 1:length(years))
{
yData = allData[allData$Season == years[x],]
for(y in 1:length())
}
}
results
write.csv(results,'03to15Data.csv')
results['Team'] = teamInfo[ match(results[['Team']],teamInfo[['Team_Id']]),'Team_Name']
write.csv(results,'03to15Data.csv')
tourneyData = read.csv("03to15Data.csv")
tourneyData
?cbind
x=cbind(avgScore,tourneyData)
x
avgScore
tourneyData = read.csv("03to15Data.csv")
avgData = read.csv("03to16.csv")
avgData
tourneyData
x=cbind(avgData,tourneyData[,3:length(tourneyData)])
x
whatsthis = lm(GPtot~.,x)
whats this
whatsthis
names(x)
x=x[,-1]
x
whatsthis = lm(GPtot~-Team.,x)
whatsthis = lm(GPtot~.-Team,x)
whatsthis
whatsthis = lm(GPtot~x[2:15,],x)
whatsthis = lm(GPtot~.,data=x[,c(length(x),2:15)])
whatsthis
summary(whatsthis)
cor(x[,2:15])
z = x
z[2:15][is.na(z[2:15])]=0
z
cor(z[,2:15])
#lots of correlation between near consecutive years, makes sense, but useful stuff
just03 = lm(GP03~avgScore03,z)
just03
summary(just03)
names(z)
#lots of correlation between near consecutive years, makes sense, but useful stuff
just03 = lm(GP03~avgScore03+,x)
#lots of correlation between near consecutive years, makes sense, but useful stuff
just03 = lm(GP03~avgScore03,x)
summary(just03)
which(names(x)=='GP03')
indextozero=which(names(x)=='GP03')
zforGP03nAVG = x
zforGP03nAVG[2:15][is.na(zforGP03nAVG[2:15])]=0
indextozero=which(names(x)=='GP03')
zforGPn03AVG[indextozero][is.na(zforGPnAVG[indextozero])]=0
zforGP03nAVG[indextozero][is.na(zforGP03nAVG[indextozero])]=0
just03 = lm(GP03~avgScore03,zforGP03nAVG) #missing values are replaced with 0
summary(just03)
avgsZ = x
avgsZ[2:15][is.na(avgsZ[2:15])]=0
cor(avgsz[,2:15])
avgsZ = x
avgsZ[2:15][is.na(avgsZ[2:15])]=0
cor(avgsZ[,2:15])
#lots of correlation between near consecutive years, makes sense, but useful stuff
just03 = lm(GP03~avgScore03,avgsZ)
summary(avgsZ)
summary(just03)
names(avgsZ)
morestuff = lm(GP03~avgScore03+avgFG03,avgsZ)
summary(morestuff)
morestuff = lm(GP03~avgScore03+avgFG03+avgTO03,avgsZ)
summary(morestuff)
